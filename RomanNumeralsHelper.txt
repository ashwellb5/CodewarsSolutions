class RomanNumerals:
    @staticmethod
    def to_roman(val : int) -> str:
        roman_dict = {
        "M": 1000,
        "CM": 900,
        "D": 500,
        "CD": 400,
        "C": 100,
        "XC": 90,
        "L": 50,
        "XL": 40,
        "X": 10,
        "IX": 9,
        "V": 5,
        "IV": 4,
        "I": 1
        }
        number_dict = {value: key for key, value in roman_dict.items()}
        roman_num = ""
        for x in number_dict.keys():
            while x <= val:
                roman_num += number_dict[x]
                val -= x
        return roman_num
    @staticmethod
    def from_roman(roman_num : str) -> int:
        roman_dict = {
        "M": 1000,
        "CM": 900,
        "D": 500,
        "CD": 400,
        "C": 100,
        "XC": 90,
        "L": 50,
        "XL": 40,
        "X": 10,
        "IX": 9,
        "V": 5,
        "IV": 4,
        "I": 1
        }
        number = 0
        temp = ""
        for x in roman_num:
            if temp == "":
                temp = x
            elif temp + x in roman_dict.keys():
                number += roman_dict[temp + x]
                temp = ""
            else:
                number += roman_dict[temp]
                temp = x
        if temp != "":
            number += roman_dict[temp]
        return number